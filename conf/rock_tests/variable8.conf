location /test {
  content_by_lua '
    if ngx.var.cookie_user == nil then
        ngx.say("cookie user: missing")
    else
        ngx.say("cookie user: [", ngx.var.cookie_user, "]")
    end
  ';
}

# rockwang@rocks-MacBook-Pro tests $ curl --cookie user=agentzh 'http://localhost:8082/test'
# cookie user: [agentzh]
# rockwang@rocks-MacBook-Pro tests $ curl --cookie user= 'http://localhost:8082/test'
# cookie user: []
# rockwang@rocks-MacBook-Pro tests $ curl 'http://localhost:8082/test'
# cookie user: missing

location /nil {
  content_by_lua '
    ngx.say("$blah = ", ngx.var.blah)
  ';
}
# rockwang@rocks-MacBook-Pro tests $ curl 'http://localhost:8082/nil'
# $blah = nil

# 上面这个例子中另一个值得注意的地方是，我们在 content_by_lua 配置指令的参数中提及了 $blah 符号，但却并没有触发“变量插值”（否则 Nginx 会在启动时抱怨 $blah 未创建）。这是因为 content_by_lua 配置指令并不支持参数的“变量插值”功能。我们前面在 （一） 中提到过，配置指令的参数是否允许“变量插值”，其实取决于该指令的实现模块。

location /foo {
  content_by_lua '
    if ngx.var.foo == nil then
      ngx.say("$foo is nil")
    else
      ngx.say("$foo = [", ngx.var.foo, "]")
    end
  ';
}

location /bar {
  set $foo 32;
  echo "foo = [$foo]";
}
# rockwang@rocks-MacBook-Pro tests $ curl 'http://localhost:8082/foo'
# $foo = [0]
# rockwang@rocks-MacBook-Pro tests $ curl 'http://localhost:8082/bar'
# foo = [32]

location /array {
        array_split "," $arg_names to=$array;
        array_map "[$array_it]" $array;
        array_join " " $array to=$res;

        echo $res;
    }
# rockwang@rocks-MacBook-Pro tests $ curl 'http://localhost:8082/array?names=Tom,Jim,Bob'
# [Tom] [Jim] [Bob]



